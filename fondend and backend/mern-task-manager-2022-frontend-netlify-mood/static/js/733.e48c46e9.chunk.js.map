{"version":3,"file":"static/js/733.e48c46e9.chunk.js","mappings":"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","sources":["APIRequest/APIRequest.js","../node_modules/react-bootstrap/esm/Row.js","components/create/Create.jsx","helper/FormHelper.js"],"sourcesContent":["import axios from \"axios\";\nimport { ErrorToast, SuccessToast } from \"../helper/FormHelper\";\nimport { HideLoader, ShowLoader } from \"../redux/state-slice/SettingSlice\";\nimport Store from \"../redux/store/Store\";\nimport {getToken, setEmail, setOTP, setToken, setUserDetails} from \"../helper/SessionHelper\";\nimport { SetCanceledTask, SetCompletedTask, SetNewTask, SetProgressTask } from \"../redux/state-slice/TaskSlice\";\nimport { SetSummary } from \"../redux/state-slice/SummarySlice\";\nimport { SetProfile } from \"../redux/state-slice/ProfileSlice\";\n\nconst AxiosHeader={headers:{\"token\":getToken()}}\n\nconst BaseUrl=\"https://mern-task-manager-apk-v1.herokuapp.com/api/v1\"\n\nexport function RegistrationRequest(email,firstName,lastName,mobile,password,photo){\n\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/registration\";\n\n    let postBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password,photo:photo}\n\n    return axios.post(URL,postBody).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            if(res.data['status']===\"fail\"){\n                if(res.data['data']['keyPattern']['email']===1){\n                    ErrorToast(\"Email Already Exist\")\n                    return false;\n                }\n                else{\n                    ErrorToast(\"Something Went Wrong\")\n                    return false;\n                }\n            }\n            else {\n                SuccessToast(\"Registration Success\")\n                return true;\n            }\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return  false;\n        }\n\n    }).catch((err)=>{\n        Store.dispatch(HideLoader())\n        ErrorToast(\"Something Went Wrong\");\n        return false;\n    })\n}\n\n\nexport function LoginRequest(email,password){\n\n    Store.dispatch(ShowLoader())\n\n    let URL=BaseUrl+\"/login\";\n    let PostBody={\"email\":email,\"password\":password}\n    return axios.post(URL,PostBody).then((res)=>{\n        Store.dispatch(HideLoader())\n\n        if(res.status===200){\n\n            setToken(res.data['token']);\n            setUserDetails(res.data['data']);\n            SuccessToast(\"Login Success\")\n            return true;\n        }\n        else{\n            ErrorToast(\"Invalid Email or Password\")\n            return  false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n}\n\n\nexport function NewTaskRequest(title,description){\n\n    Store.dispatch(ShowLoader())\n\n    let URL=BaseUrl+\"/createTask\";\n    let PostBody={title:title,description:description,status:\"New\"}\n\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n\n        if(res.status===200){\n            SuccessToast(\"New Task Created\")\n            return true;\n        }else{\n            ErrorToast(\"Something Went Wrong\")\n            return false;\n        }\n        \n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    })\n\n}\n\n\n\nexport function TaskListByStatus(Status){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/listTaskByStatus/\"+Status;\n    axios.get(URL,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            if(Status===\"New\"){\n                Store.dispatch(SetNewTask(res.data['data']))\n            }\n            else if(Status===\"Completed\"){\n                Store.dispatch(SetCompletedTask(res.data['data']))\n            }\n            else if(Status===\"Canceled\"){\n                Store.dispatch(SetCanceledTask(res.data['data']))\n            }\n            else if(Status===\"Progress\"){\n                Store.dispatch(SetProgressTask(res.data['data']))\n            }\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n    });\n}\n\n\n\nexport function SummaryRequest(){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/taskStatusCount\";\n    axios.get(URL,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            Store.dispatch(SetSummary(res.data['data']))\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n    });\n}\n\n\n\nexport function DeleteRequest(id){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/deleteTask/\"+id;\n    return axios.get(URL,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            SuccessToast(\"Delete Successful\")\n            return true;\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n}\n\n\n\nexport function UpdateStatusRequest(id,status){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/updateTaskStatus/\"+id+\"/\"+status;\n    return axios.get(URL,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            SuccessToast(\"Status Updated\")\n            return true;\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n}\n\n\nexport function GetProfileDetails(){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/profileDetails\";\n    axios.get(URL,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            Store.dispatch(SetProfile(res.data['data'][0]))\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n    });\n}\n\n\n\nexport function ProfileUpdateRequest(email,firstName,lastName,mobile,password,photo){\n\n    Store.dispatch(ShowLoader())\n\n    let URL=BaseUrl+\"/profileUpdate\";\n\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password,photo:photo}\n    let UserDetails={email:email,firstName:firstName,lastName:lastName,mobile:mobile,photo:photo}\n\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n\n            SuccessToast(\"Profile Update Success\")\n            setUserDetails(UserDetails)\n\n            return true;\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return  false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n}\n\n\nexport function RecoverVerifyEmailRequest(email){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/RecoverVerifyEmail/\"+email;\n\n    return axios.get(URL).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            if(res.data['status']==='fail'){\n                ErrorToast(\"No User Found\");\n                return false;\n            }else{\n                setEmail(email);\n                SuccessToast(\"A 6 Digit Verification code has been sent to your email address\")\n                return true;\n            }\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n\n}\n\n\nexport function RecoverVerifyOTPRequest(email,OTP){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/RecoverVerifyOTP/\"+email+\"/\"+OTP;\n    return axios.get(URL).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            if(res.data['status']===\"fail\"){\n                ErrorToast(res.data['data']);\n                return false;\n            }\n            else{\n                setOTP(OTP)\n                SuccessToast(\"Code Verification Success\");\n                return true;\n            }\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n}\n\nexport function RecoverResetPassRequest(email,OTP,password){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/RecoverResetPass/\";\n\n    let postBody={email:email,OTP:OTP,password:password}\n\n    return axios.post(URL,postBody).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            if(res.data['status']==='fail'){\n                ErrorToast(res.data['data'])\n                return false;\n            }else{\n                setOTP(OTP)\n                SuccessToast(\"New Password Created\");\n                return true;\n            }\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return false\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n    });\n\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React, { useRef } from 'react'\nimport {Container,Row} from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom';\nimport { NewTaskRequest } from '../../APIRequest/APIRequest';\nimport { ErrorToast, IsEmpty } from '../../helper/FormHelper';\n\nconst Create=()=>{\n\n    let titleRef,descriptionRef=useRef();\n    let navigate = useNavigate ();\n\n    const CreateNew = () => {\n        let title=titleRef.value;\n        let description=descriptionRef.value;\n        if(IsEmpty(title)){\n            ErrorToast(\"Title Required\")\n        }\n        else if(IsEmpty(description)){\n            ErrorToast(\"Description Required\")\n        }\n        else {\n            NewTaskRequest(title,description).then((res)=>{\n                if(res===true){\n                    navigate(\"/All\")\n                }\n            })\n        }\n    }\n\n  return (\n    <Container fluid={true} className=\"content-body\">\n            <Row className=\"d-flex justify-content-center\">\n                <div className=\"col-12 col-lg-8  col-sm-12 col-md-8  p-2\">\n                    <div className=\"card shadow\">\n                        <div className=\"card-body shadow m-4\">\n                            <h4 >Create New</h4>\n                            <br/>\n                            <input ref={(input)=>titleRef=input} placeholder=\"Task Name\" className=\"form-control animated fadeInUp\" type=\"text\"/>\n                            <br/>\n                            <textarea ref={(input)=>descriptionRef=input} rows={5} placeholder=\"Task Description\" className=\"form-control animated fadeInUp\" type=\"text\"/>\n                            <br/>\n                            <button onClick={CreateNew} className=\"btn float-end btn-primary\">Create</button>\n                        </div>\n                    </div>\n                </div>\n            </Row>\n        </Container>\n  )\n}\n\nexport default Create\n","import cogoToast from 'cogo-toast';\n\nlet EmailRegx = /\\S+@\\S+\\.\\S+/;\nlet MobileRegx = /(^(\\+88|0088)?(01){1}[3456789]{1}(\\d){8})$/;\n\nclass FormHelper {\n\n    IsEmpty(value) {\n        return value.length === 0;\n    }\n\n    IsMobile(value){\n        return MobileRegx.test(value);\n    }\n\n    IsEmail(value) {\n        return !EmailRegx.test(value);\n    }\n\n    ErrorToast(msg) {\n        cogoToast.error(msg, { position: \"top-right\" });\n    }\n    SuccessToast(msg) {\n        cogoToast.success(msg, { position: \"top-right\" });\n    }\n\n    getBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n    }\n\n}\n\nexport const{\n    IsEmpty,\n    IsMobile,\n    IsEmail,\n    ErrorToast,\n    SuccessToast,\n    getBase64\n}=new FormHelper();"],"names":["AxiosHeader","headers","getToken","BaseUrl","RegistrationRequest","email","firstName","lastName","mobile","password","photo","Store","ShowLoader","postBody","axios","then","res","HideLoader","status","data","ErrorToast","SuccessToast","catch","err","LoginRequest","PostBody","setToken","setUserDetails","NewTaskRequest","title","description","TaskListByStatus","Status","URL","SetNewTask","SetCompletedTask","SetCanceledTask","SetProgressTask","SummaryRequest","SetSummary","DeleteRequest","id","UpdateStatusRequest","GetProfileDetails","SetProfile","ProfileUpdateRequest","UserDetails","RecoverVerifyEmailRequest","setEmail","RecoverVerifyOTPRequest","OTP","setOTP","RecoverResetPassRequest","Row","React","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","titleRef","descriptionRef","useRef","navigate","useNavigate","Container","fluid","input","placeholder","type","rows","onClick","value","IsEmpty","EmailRegx","MobileRegx","FormHelper","length","test","msg","cogoToast","position","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","IsMobile","IsEmail","getBase64"],"sourceRoot":""}