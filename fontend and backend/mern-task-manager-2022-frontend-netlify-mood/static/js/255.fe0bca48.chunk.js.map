{"version":3,"file":"static/js/255.fe0bca48.chunk.js","mappings":"4hBASMA,EAAY,CAACC,QAAQ,CAAC,OAAQC,EAAAA,EAAAA,QAE9BC,EAAQ,wDAEP,SAASC,EAAoBC,EAAMC,EAAUC,EAASC,EAAOC,EAASC,GAEzEC,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OACf,IAEIC,EAAS,CAACR,MAAMA,EAAMC,UAAUA,EAAUC,SAASA,EAASC,OAAOA,EAAOC,SAASA,EAASC,MAAMA,GAEtG,OAAOI,IAAAA,KAJCX,qEAIcU,GAAUE,MAAK,SAACC,GAElC,OADAL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OACC,MAAbD,EAAIE,OACqB,SAArBF,EAAIG,KAAJ,OAC8C,IAA1CH,EAAIG,KAAJ,wBACCC,EAAAA,EAAAA,IAAW,wBACJ,KAGPA,EAAAA,EAAAA,IAAW,yBACJ,KAIXC,EAAAA,EAAAA,IAAa,yBACN,KAIXD,EAAAA,EAAAA,IAAW,yBACH,EAGf,IAAEE,OAAM,SAACC,GAGN,OAFAZ,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,QACfG,EAAAA,EAAAA,IAAW,yBACJ,CACV,GACJ,CAGM,SAASI,EAAanB,EAAMI,GAE/BE,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OAEf,IACIa,EAAS,CAAC,MAAQpB,EAAM,SAAWI,GACvC,OAAOK,IAAAA,KAFCX,8DAEcsB,GAAUV,MAAK,SAACC,GAGlC,OAFAL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OAEC,MAAbD,EAAIE,SAEHQ,EAAAA,EAAAA,IAASV,EAAIG,KAAJ,QACTQ,EAAAA,EAAAA,IAAeX,EAAIG,KAAJ,OACfE,EAAAA,EAAAA,IAAa,kBACN,KAGPD,EAAAA,EAAAA,IAAW,8BACH,EAEf,IAAEE,OAAM,SAACC,GAGN,OAFAH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,QACR,CACV,GACJ,CAGM,SAASW,EAAeC,EAAMC,GAEjCnB,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OAEf,IACIa,EAAS,CAACI,MAAMA,EAAMC,YAAYA,EAAYZ,OAAO,OAEzD,OAAOJ,IAAAA,KAHCX,mEAGcsB,EAASzB,GAAae,MAAK,SAACC,GAG9C,OAFAL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OAEC,MAAbD,EAAIE,SACHG,EAAAA,EAAAA,IAAa,qBACN,KAEPD,EAAAA,EAAAA,IAAW,yBACJ,EAGd,IAAEE,OAAM,SAACC,GAGN,OAFAH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,QACR,CACV,GAEJ,CAIM,SAASc,EAAiBC,GAC7BrB,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OACf,IAAIqB,EAAI9B,EAAQ,qBAAqB6B,EACrClB,IAAAA,IAAUmB,EAAIjC,GAAae,MAAK,SAACC,GAC7BL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OACC,MAAbD,EAAIE,OACS,QAATc,EACCrB,EAAAA,EAAAA,UAAeuB,EAAAA,EAAAA,IAAWlB,EAAIG,KAAJ,OAEb,cAATa,EACJrB,EAAAA,EAAAA,UAAewB,EAAAA,EAAAA,IAAiBnB,EAAIG,KAAJ,OAEnB,aAATa,EACJrB,EAAAA,EAAAA,UAAeyB,EAAAA,EAAAA,IAAgBpB,EAAIG,KAAJ,OAElB,aAATa,GACJrB,EAAAA,EAAAA,UAAe0B,EAAAA,EAAAA,IAAgBrB,EAAIG,KAAJ,QAInCC,EAAAA,EAAAA,IAAW,uBAElB,IAAEE,OAAM,SAACC,IACNH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,MAClB,GACJ,CAIM,SAASqB,IACZ3B,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OAEfE,IAAAA,IADQX,wEACMH,GAAae,MAAK,SAACC,GAC7BL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OACC,MAAbD,EAAIE,OACHP,EAAAA,EAAAA,UAAe4B,EAAAA,EAAAA,IAAWvB,EAAIG,KAAJ,QAG1BC,EAAAA,EAAAA,IAAW,uBAElB,IAAEE,OAAM,SAACC,IACNH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,MAClB,GACJ,CAIM,SAASuB,EAAcC,GAC1B9B,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OACf,IAAIqB,EAAI9B,EAAQ,eAAesC,EAC/B,OAAO3B,IAAAA,IAAUmB,EAAIjC,GAAae,MAAK,SAACC,GAEpC,OADAL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OACC,MAAbD,EAAIE,SACHG,EAAAA,EAAAA,IAAa,sBACN,KAGPD,EAAAA,EAAAA,IAAW,yBACJ,EAEd,IAAEE,OAAM,SAACC,GAGN,OAFAH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,QACR,CACV,GACJ,CAIM,SAASyB,EAAoBD,EAAGvB,GACnCP,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OACf,IAAIqB,EAAI9B,EAAQ,qBAAqBsC,EAAG,IAAIvB,EAC5C,OAAOJ,IAAAA,IAAUmB,EAAIjC,GAAae,MAAK,SAACC,GAEpC,OADAL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OACC,MAAbD,EAAIE,SACHG,EAAAA,EAAAA,IAAa,mBACN,KAGPD,EAAAA,EAAAA,IAAW,yBACJ,EAEd,IAAEE,OAAM,SAACC,GAGN,OAFAH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,QACR,CACV,GACJ,CAGM,SAAS0B,IACZhC,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OAEfE,IAAAA,IADQX,uEACMH,GAAae,MAAK,SAACC,GAC7BL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OACC,MAAbD,EAAIE,OACHP,EAAAA,EAAAA,UAAeiC,EAAAA,EAAAA,IAAW5B,EAAIG,KAAJ,KAAiB,MAG3CC,EAAAA,EAAAA,IAAW,uBAElB,IAAEE,OAAM,SAACC,IACNH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,MAClB,GACJ,CAIM,SAAS4B,EAAqBxC,EAAMC,EAAUC,EAASC,EAAOC,EAASC,GAE1EC,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OAEf,IAEIa,EAAS,CAACpB,MAAMA,EAAMC,UAAUA,EAAUC,SAASA,EAASC,OAAOA,EAAOC,SAASA,EAASC,MAAMA,GAClGoC,EAAY,CAACzC,MAAMA,EAAMC,UAAUA,EAAUC,SAASA,EAASC,OAAOA,EAAOE,MAAMA,GAEvF,OAAOI,IAAAA,KALCX,sEAKcsB,EAASzB,GAAae,MAAK,SAACC,GAE9C,OADAL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OACC,MAAbD,EAAIE,SAEHG,EAAAA,EAAAA,IAAa,2BACbM,EAAAA,EAAAA,IAAemB,IAER,KAGP1B,EAAAA,EAAAA,IAAW,yBACH,EAEf,IAAEE,OAAM,SAACC,GAGN,OAFAH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,QACR,CACV,GACJ,CAGM,SAAS8B,EAA0B1C,GACtCM,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OACf,IAAIqB,EAAI9B,EAAQ,uBAAuBE,EAEvC,OAAOS,IAAAA,IAAUmB,GAAKlB,MAAK,SAACC,GAExB,OADAL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OACC,MAAbD,EAAIE,OACqB,SAArBF,EAAIG,KAAJ,SACCC,EAAAA,EAAAA,IAAW,kBACJ,KAEP4B,EAAAA,EAAAA,IAAS3C,IACTgB,EAAAA,EAAAA,IAAa,oEACN,KAIXD,EAAAA,EAAAA,IAAW,yBACJ,EAEd,IAAEE,OAAM,SAACC,GAGN,OAFAH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,QACR,CACV,GAEJ,CAGM,SAASgC,EAAwB5C,EAAM6C,GAC1CvC,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OACf,IAAIqB,EAAI9B,EAAQ,qBAAqBE,EAAM,IAAI6C,EAC/C,OAAOpC,IAAAA,IAAUmB,GAAKlB,MAAK,SAACC,GAExB,OADAL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OACC,MAAbD,EAAIE,OACqB,SAArBF,EAAIG,KAAJ,SACCC,EAAAA,EAAAA,IAAWJ,EAAIG,KAAJ,OACJ,KAGPgC,EAAAA,EAAAA,IAAOD,IACP7B,EAAAA,EAAAA,IAAa,8BACN,KAIXD,EAAAA,EAAAA,IAAW,yBACJ,EAEd,IAAEE,OAAM,SAACC,GAGN,OAFAH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,QACR,CACV,GACJ,CAEM,SAASmC,EAAwB/C,EAAM6C,EAAIzC,GAC9CE,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,OACf,IAEIC,EAAS,CAACR,MAAMA,EAAM6C,IAAIA,EAAIzC,SAASA,GAE3C,OAAOK,IAAAA,KAJCX,0EAIcU,GAAUE,MAAK,SAACC,GAElC,OADAL,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,OACC,MAAbD,EAAIE,OACqB,SAArBF,EAAIG,KAAJ,SACCC,EAAAA,EAAAA,IAAWJ,EAAIG,KAAJ,OACJ,KAEPgC,EAAAA,EAAAA,IAAOD,IACP7B,EAAAA,EAAAA,IAAa,yBACN,KAIXD,EAAAA,EAAAA,IAAW,yBACJ,EAEd,IAAEE,OAAM,SAACC,IACNH,EAAAA,EAAAA,IAAW,wBACXT,EAAAA,EAAAA,UAAeM,EAAAA,EAAAA,MAClB,GAEJ,C,6FC9QD,UAtDwB,WAEpB,IAEIoC,EAFAC,GAASC,EAAAA,EAAAA,MAEGC,GAAmBC,EAAAA,EAAAA,UAsBrC,OACE,SAAC,EAAAC,SAAD,WACI,gBAAKC,UAAU,YAAf,UACI,gBAAKA,UAAU,6BAAf,UACI,gBAAKA,UAAU,kCAAf,UACI,gBAAKA,UAAU,gBAAf,UACI,iBAAKA,UAAU,YAAf,WACI,8CACA,mBACA,mDACA,kBAAOC,OAAOC,EAAAA,EAAAA,MAAYC,UAAU,EAAOC,YAAY,aAAaJ,UAAU,iCAAiCK,KAAK,WACpH,mBACA,6CACA,kBAAOC,IAAK,SAACC,GAAD,OAASb,EAAYa,CAArB,EAA4BH,YAAY,eAAeJ,UAAU,iCAAiCK,KAAK,cACnH,mBACA,iDACA,kBAAOC,IAAK,SAACC,GAAD,OAASV,EAAmBU,CAA5B,EAAmCH,YAAY,mBAAmBJ,UAAU,iCAAiCK,KAAK,cAC9H,mBACA,mBAAQG,QAtChB,WACZ,IAAM1D,EAAS4C,EAAYO,MACrBQ,EAAgBZ,EAAmBI,OAEtCS,EAAAA,EAAAA,IAAQ5D,IACPW,EAAAA,EAAAA,IAAW,sBAEPiD,EAAAA,EAAAA,IAAQD,IACZhD,EAAAA,EAAAA,IAAW,6BAEPX,IAAW2D,GACfhD,EAAAA,EAAAA,IAAW,2BAEXgC,EAAAA,EAAAA,KAAwBS,EAAAA,EAAAA,OAAWS,EAAAA,EAAAA,MAAS7D,GAAUM,MAAK,SAACwD,IAC5C,IAATA,GACCjB,EAAS,SAEhB,GAER,EAmBmDK,UAAU,oDAAtC,8BAQ3B,C,kNCzDGa,EAAY,eACZC,EAAa,6CAkCV,EAOL,IAvCIC,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CA4BD,OA5BCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,UAAAA,MAEF,SAAQd,GACJ,OAAwB,IAAjBA,EAAMe,MAChB,yBAED,SAASf,GACL,OAAOa,EAAWG,KAAKhB,EAC1B,wBAED,SAAQA,GACJ,OAAQY,EAAUI,KAAKhB,EAC1B,2BAED,SAAWiB,GACPC,EAAAA,EAAAA,MAAgBD,EAAK,CAAEE,SAAU,aACpC,6BACD,SAAaF,GACTC,EAAAA,EAAAA,QAAkBD,EAAK,CAAEE,SAAU,aACtC,0BAED,SAAUC,GACN,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOb,OAArB,EAChBa,EAAOI,QAAU,SAACC,GAAD,OAAWN,EAAOM,EAAlB,CACpB,GACJ,OA5BCf,IAiCFL,EADG,EACHA,QACAqB,EAFG,EAEHA,SACAC,EAHG,EAGHA,QACAvE,EAJG,EAIHA,WACAC,EALG,EAKHA,aACAuE,EANG,EAMHA,S","sources":["APIRequest/APIRequest.js","AccountRecover/Create_Password.jsx","helper/FormHelper.js"],"sourcesContent":["import axios from \"axios\";\nimport { ErrorToast, SuccessToast } from \"../helper/FormHelper\";\nimport { HideLoader, ShowLoader } from \"../redux/state-slice/SettingSlice\";\nimport Store from \"../redux/store/Store\";\nimport {getToken, setEmail, setOTP, setToken, setUserDetails} from \"../helper/SessionHelper\";\nimport { SetCanceledTask, SetCompletedTask, SetNewTask, SetProgressTask } from \"../redux/state-slice/TaskSlice\";\nimport { SetSummary } from \"../redux/state-slice/SummarySlice\";\nimport { SetProfile } from \"../redux/state-slice/ProfileSlice\";\n\nconst AxiosHeader={headers:{\"token\":getToken()}}\n\nconst BaseUrl=\"https://mern-task-manager-apk-v1.herokuapp.com/api/v1\"\n\nexport function RegistrationRequest(email,firstName,lastName,mobile,password,photo){\n\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/registration\";\n\n    let postBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password,photo:photo}\n\n    return axios.post(URL,postBody).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            if(res.data['status']===\"fail\"){\n                if(res.data['data']['keyPattern']['email']===1){\n                    ErrorToast(\"Email Already Exist\")\n                    return false;\n                }\n                else{\n                    ErrorToast(\"Something Went Wrong\")\n                    return false;\n                }\n            }\n            else {\n                SuccessToast(\"Registration Success\")\n                return true;\n            }\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return  false;\n        }\n\n    }).catch((err)=>{\n        Store.dispatch(HideLoader())\n        ErrorToast(\"Something Went Wrong\");\n        return false;\n    })\n}\n\n\nexport function LoginRequest(email,password){\n\n    Store.dispatch(ShowLoader())\n\n    let URL=BaseUrl+\"/login\";\n    let PostBody={\"email\":email,\"password\":password}\n    return axios.post(URL,PostBody).then((res)=>{\n        Store.dispatch(HideLoader())\n\n        if(res.status===200){\n\n            setToken(res.data['token']);\n            setUserDetails(res.data['data']);\n            SuccessToast(\"Login Success\")\n            return true;\n        }\n        else{\n            ErrorToast(\"Invalid Email or Password\")\n            return  false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n}\n\n\nexport function NewTaskRequest(title,description){\n\n    Store.dispatch(ShowLoader())\n\n    let URL=BaseUrl+\"/createTask\";\n    let PostBody={title:title,description:description,status:\"New\"}\n\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n\n        if(res.status===200){\n            SuccessToast(\"New Task Created\")\n            return true;\n        }else{\n            ErrorToast(\"Something Went Wrong\")\n            return false;\n        }\n        \n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    })\n\n}\n\n\n\nexport function TaskListByStatus(Status){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/listTaskByStatus/\"+Status;\n    axios.get(URL,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            if(Status===\"New\"){\n                Store.dispatch(SetNewTask(res.data['data']))\n            }\n            else if(Status===\"Completed\"){\n                Store.dispatch(SetCompletedTask(res.data['data']))\n            }\n            else if(Status===\"Canceled\"){\n                Store.dispatch(SetCanceledTask(res.data['data']))\n            }\n            else if(Status===\"Progress\"){\n                Store.dispatch(SetProgressTask(res.data['data']))\n            }\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n    });\n}\n\n\n\nexport function SummaryRequest(){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/taskStatusCount\";\n    axios.get(URL,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            Store.dispatch(SetSummary(res.data['data']))\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n    });\n}\n\n\n\nexport function DeleteRequest(id){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/deleteTask/\"+id;\n    return axios.get(URL,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            SuccessToast(\"Delete Successful\")\n            return true;\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n}\n\n\n\nexport function UpdateStatusRequest(id,status){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/updateTaskStatus/\"+id+\"/\"+status;\n    return axios.get(URL,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            SuccessToast(\"Status Updated\")\n            return true;\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n}\n\n\nexport function GetProfileDetails(){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/profileDetails\";\n    axios.get(URL,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            Store.dispatch(SetProfile(res.data['data'][0]))\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n    });\n}\n\n\n\nexport function ProfileUpdateRequest(email,firstName,lastName,mobile,password,photo){\n\n    Store.dispatch(ShowLoader())\n\n    let URL=BaseUrl+\"/profileUpdate\";\n\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password,photo:photo}\n    let UserDetails={email:email,firstName:firstName,lastName:lastName,mobile:mobile,photo:photo}\n\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n\n            SuccessToast(\"Profile Update Success\")\n            setUserDetails(UserDetails)\n\n            return true;\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return  false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n}\n\n\nexport function RecoverVerifyEmailRequest(email){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/RecoverVerifyEmail/\"+email;\n\n    return axios.get(URL).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            if(res.data['status']==='fail'){\n                ErrorToast(\"No User Found\");\n                return false;\n            }else{\n                setEmail(email);\n                SuccessToast(\"A 6 Digit Verification code has been sent to your email address\")\n                return true;\n            }\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n\n}\n\n\nexport function RecoverVerifyOTPRequest(email,OTP){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/RecoverVerifyOTP/\"+email+\"/\"+OTP;\n    return axios.get(URL).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            if(res.data['status']===\"fail\"){\n                ErrorToast(res.data['data']);\n                return false;\n            }\n            else{\n                setOTP(OTP)\n                SuccessToast(\"Code Verification Success\");\n                return true;\n            }\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return false;\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n        return false;\n    });\n}\n\nexport function RecoverResetPassRequest(email,OTP,password){\n    Store.dispatch(ShowLoader())\n    let URL=BaseUrl+\"/RecoverResetPass/\";\n\n    let postBody={email:email,OTP:OTP,password:password}\n\n    return axios.post(URL,postBody).then((res)=>{\n        Store.dispatch(HideLoader())\n        if(res.status===200){\n            if(res.data['status']==='fail'){\n                ErrorToast(res.data['data'])\n                return false;\n            }else{\n                setOTP(OTP)\n                SuccessToast(\"New Password Created\");\n                return true;\n            }\n        }\n        else{\n            ErrorToast(\"Something Went Wrong\")\n            return false\n        }\n    }).catch((err)=>{\n        ErrorToast(\"Something Went Wrong\")\n        Store.dispatch(HideLoader())\n    });\n\n}","import React, { Fragment } from 'react'\r\nimport { useRef } from 'react'\r\nimport { RecoverResetPassRequest } from '../APIRequest/APIRequest';\r\nimport { ErrorToast, IsEmpty } from '../helper/FormHelper';\r\nimport {getEmail, getOTP} from '../helper/SessionHelper'\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Create_Password = () => {\r\n\r\n    let navigate=useNavigate();\r\n\r\n    let passwordRef,confirmPasswordRef=useRef();\r\n\r\n    const resetPass=()=>{\r\n        const password=passwordRef.value;\r\n        const confirmPassword=confirmPasswordRef.value;\r\n\r\n        if(IsEmpty(password)){\r\n            ErrorToast(\"Password Required\");\r\n        }\r\n        else if(IsEmpty(confirmPassword)){\r\n            ErrorToast(\"Confirm Password Required\");\r\n        }\r\n        else if(password!==confirmPassword){\r\n            ErrorToast(\"Password Dosen't Match\");\r\n        }else{\r\n            RecoverResetPassRequest(getEmail(),getOTP(),password).then((result)=>{\r\n                if(result===true){\r\n                    navigate(\"/Login\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n  return (\r\n    <Fragment>\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-7 col-lg-6 center-screen\">\r\n                    <div className=\"card w-90 p-4\">\r\n                        <div className=\"card-body\">\r\n                            <h4>SET NEW PASSWORD</h4>\r\n                            <br/>\r\n                            <label>Your email address</label>\r\n                            <input value={getEmail()} readOnly={true}  placeholder=\"User Email\" className=\"form-control animated fadeInUp\" type=\"email\"/>\r\n                            <br/>\r\n                            <label>New Password</label>\r\n                            <input ref={(input)=>passwordRef=input} placeholder=\"New Password\" className=\"form-control animated fadeInUp\" type=\"password\"/>\r\n                            <br/>\r\n                            <label>Confirm Password</label>\r\n                            <input ref={(input)=>confirmPasswordRef=input} placeholder=\"Confirm Password\" className=\"form-control animated fadeInUp\" type=\"password\"/>\r\n                            <br/>\r\n                            <button onClick={resetPass} className=\"btn w-100 animated fadeInUp float-end btn-primary\">Next</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </Fragment>\r\n  )\r\n}\r\n\r\nexport default Create_Password\r\n","import cogoToast from 'cogo-toast';\n\nlet EmailRegx = /\\S+@\\S+\\.\\S+/;\nlet MobileRegx = /(^(\\+88|0088)?(01){1}[3456789]{1}(\\d){8})$/;\n\nclass FormHelper {\n\n    IsEmpty(value) {\n        return value.length === 0;\n    }\n\n    IsMobile(value){\n        return MobileRegx.test(value);\n    }\n\n    IsEmail(value) {\n        return !EmailRegx.test(value);\n    }\n\n    ErrorToast(msg) {\n        cogoToast.error(msg, { position: \"top-right\" });\n    }\n    SuccessToast(msg) {\n        cogoToast.success(msg, { position: \"top-right\" });\n    }\n\n    getBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n    }\n\n}\n\nexport const{\n    IsEmpty,\n    IsMobile,\n    IsEmail,\n    ErrorToast,\n    SuccessToast,\n    getBase64\n}=new FormHelper();"],"names":["AxiosHeader","headers","getToken","BaseUrl","RegistrationRequest","email","firstName","lastName","mobile","password","photo","Store","ShowLoader","postBody","axios","then","res","HideLoader","status","data","ErrorToast","SuccessToast","catch","err","LoginRequest","PostBody","setToken","setUserDetails","NewTaskRequest","title","description","TaskListByStatus","Status","URL","SetNewTask","SetCompletedTask","SetCanceledTask","SetProgressTask","SummaryRequest","SetSummary","DeleteRequest","id","UpdateStatusRequest","GetProfileDetails","SetProfile","ProfileUpdateRequest","UserDetails","RecoverVerifyEmailRequest","setEmail","RecoverVerifyOTPRequest","OTP","setOTP","RecoverResetPassRequest","passwordRef","navigate","useNavigate","confirmPasswordRef","useRef","Fragment","className","value","getEmail","readOnly","placeholder","type","ref","input","onClick","confirmPassword","IsEmpty","getOTP","result","EmailRegx","MobileRegx","FormHelper","length","test","msg","cogoToast","position","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","IsMobile","IsEmail","getBase64"],"sourceRoot":""}